% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/psge.R
\name{run_psge}
\alias{run_psge}
\title{Run the PSGE algorithm with progress reporting}
\usage{
run_psge(
  grammar,
  fitness_fn,
  pop_size = 100,
  generations = 50,
  crossover_rate = 0.9,
  mutation_rate = 0.1,
  max_depth = 17,
  tournament_size = 3,
  elitism = NULL,
  learning_factor = 0.01,
  alternate_update = TRUE,
  force_perturbation = FALSE,
  perturbation_factor = 0.1,
  verbose = TRUE,
  parallel = FALSE,
  n_workers = 2,
  future_strategy = "multisession",
  post_generation_fn = NULL,
  post_evaluation_fn = NULL
)
}
\arguments{
\item{grammar}{PCFG grammar structure from read_pcfg_grammar()}

\item{fitness_fn}{Fitness evaluation function}

\item{pop_size}{Population size}

\item{generations}{Number of generations}

\item{crossover_rate}{Probability of crossover}

\item{mutation_rate}{Mutation rate}

\item{max_depth}{Maximum tree depth}

\item{tournament_size}{Tournament selection size}

\item{elitism}{Number of elite individuals to preserve}

\item{learning_factor}{Learning rate for grammar probability updates}

\item{alternate_update}{Whether to alternate between best overall and best in generation}

\item{force_perturbation}{Whether to force perturbation of all probability distributions}

\item{perturbation_factor}{Amount of perturbation when forcing changes}

\item{verbose}{Whether to print additional progress information}

\item{parallel}{Whether to use parallel evaluation}

\item{n_workers}{Number of workers for parallel processing}

\item{future_strategy}{Future strategy to use for parallel processing}

\item{post_generation_fn}{Function to run after population generation (optional)}

\item{post_evaluation_fn}{Function to run after fitness evaluation (optional)}
}
\value{
List containing best solution and final grammar
}
\description{
Run the PSGE algorithm with progress reporting
}
\details{
Note that we use progressr progress bars with this function:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{library(progressr)

# Configure progress reporting
handlers(global = TRUE)
handlers("progress")

# Run with progress reporting
with_progress(\{
  result <- run_psge(
    grammar = my_grammar,
    fitness_fn = my_fitness_function,
    generations = 100
  )
\})
}\if{html}{\out{</div>}}
}
